# Generated by Django 3.2.11 on 2022-01-28 10:57

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('uikit_grid', wagtail.core.fields.StreamField([('UIKit', wagtail.core.blocks.StructBlock([('container', wagtail.core.blocks.ChoiceBlock(choices=[('large', 'Large Width Container'), ('medium', 'Medium Width Container'), ('small', 'Small Width Container')], required=False)), ('wrap_grid', wagtail.core.blocks.BooleanBlock(help_text='Do you want to wrap the grid block items inside a card?', required=False)), ('margin', wagtail.core.blocks.StreamBlock([('margin_top', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Margin'), ('small', 'Small Margin'), ('medium', 'Medium Margin'), ('large', 'Large Margin')], required=False)), ('margin_bottom', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Margin'), ('small', 'Small Margin'), ('medium', 'Medium Margin'), ('large', 'Large Margin')], required=False)), ('margin_left', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Margin'), ('small', 'Small Margin'), ('medium', 'Medium Margin'), ('large', 'Large Margin')], required=False)), ('margin_right', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Margin'), ('small', 'Small Margin'), ('medium', 'Medium Margin'), ('large', 'Large Margin')], required=False))], help_text='Add predefined margins for this item', required=False)), ('padding', wagtail.core.blocks.StreamBlock([('padding_top', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Padding'), ('small', 'Small Padding'), ('medium', 'Medium Padding'), ('large', 'Large Padding')], required=False)), ('padding_bottom', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Padding'), ('small', 'Small Padding'), ('medium', 'Medium Padding'), ('large', 'Large Padding')], required=False)), ('padding_left', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Padding'), ('small', 'Small Padding'), ('medium', 'Medium Padding'), ('large', 'Large Padding')], required=False)), ('padding_right', wagtail.core.blocks.ChoiceBlock(choices=[(None, 'No Padding'), ('small', 'Small Padding'), ('medium', 'Medium Padding'), ('large', 'Large Padding')], required=False))], help_text='Add predefined paddings for this item', required=False)), ('grid_blocks', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('background_color', wagtail.core.blocks.CharBlock(help_text='Preferred font color. Eg: red, #157b57..etc', required=False)), ('background_image', wagtail.images.blocks.ImageChooserBlock(label='Background Image', required=False)), ('uikit_block', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock()), ('color', wagtail.core.blocks.CharBlock(help_text='Preferred font color. Eg: red, #157b57..etc', required=False)), ('align', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right'), ('center', 'Center'), ('justify', 'Justify')], required=False))])), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image'))])), ('slideshow', wagtail.core.blocks.StructBlock([('animation', wagtail.core.blocks.ChoiceBlock(choices=[('slide', 'Slide'), ('fade', 'Fade'), ('scale', 'Scale'), ('pull', 'Pull'), ('push', 'Push')], required=False)), ('auto_play', wagtail.core.blocks.BooleanBlock(required=False)), ('image_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image'))]), label='Slideshow'))])), ('slider', wagtail.core.blocks.StructBlock([('gap', wagtail.core.blocks.BooleanBlock(help_text='Gap between the images', required=False)), ('center', wagtail.core.blocks.BooleanBlock(help_text='Images will be aligned center to the element', required=False)), ('auto_play', wagtail.core.blocks.BooleanBlock(required=False)), ('number_of_images', wagtail.core.blocks.ChoiceBlock(choices=[(1, '1 Item'), (2, '2 Items'), (3, '3 Items'), (4, '4 Items'), (5, '5 Items'), (6, '6 Items')], help_text='Number of images that will be displayed in the desktop mode', required=False)), ('image_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image'))]), label='Slider'))])), ('lightbox', wagtail.core.blocks.StructBlock([('animation', wagtail.core.blocks.ChoiceBlock(choices=[('slide', 'Slide'), ('fade', 'Fade'), ('scale', 'Scale'), ('pull', 'Pull'), ('push', 'Push')], required=False)), ('number_of_images', wagtail.core.blocks.ChoiceBlock(choices=[(1, '1 Item'), (2, '2 Items'), (3, '3 Items'), (4, '4 Items'), (5, '5 Items'), (6, '6 Items')], help_text='Number of images that will be displayed in the desktop mode', required=False)), ('image_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image'))]), label='Lightbox'))])), ('popup', wagtail.core.blocks.StructBlock([('button_text', wagtail.core.blocks.CharBlock()), ('popup_title', wagtail.core.blocks.CharBlock()), ('popup_message', wagtail.core.blocks.RichTextBlock())], label='Popup Message')), ('switcher', wagtail.core.blocks.StructBlock([('switcher_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('switcher_title', wagtail.core.blocks.CharBlock()), ('switcher_body', wagtail.core.blocks.TextBlock())]), label='Switcher'))], label='Switcher')), ('banner', wagtail.core.blocks.StructBlock([('banner_image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('banner_title', wagtail.core.blocks.CharBlock(required=True)), ('banner_content', wagtail.core.blocks.RichTextBlock(required=False))], label='Banner')), ('button', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(required=True)), ('link', wagtail.core.blocks.URLBlock(required=False)), ('priority', wagtail.core.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('danger', 'Danger'), ('muted', 'Muted')], required=False))])), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=True))]))], label='Block', required=False))]), label='Grid Blocks'))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
